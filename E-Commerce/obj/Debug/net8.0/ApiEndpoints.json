[
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "GetUserByEmail",
    "RelativePath": "api/Authentication",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 500
      },
      {
        "Type": "Shared.ErrorModels.ValidationErrorResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "UpdateUserAddress",
    "RelativePath": "api/Authentication",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "address",
        "Type": "Shared.Security.AddressDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 500
      },
      {
        "Type": "Shared.ErrorModels.ValidationErrorResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "GetUserAddress",
    "RelativePath": "api/Authentication/Address",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 500
      },
      {
        "Type": "Shared.ErrorModels.ValidationErrorResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "CheckEmailExist",
    "RelativePath": "api/Authentication/EmailExist",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 500
      },
      {
        "Type": "Shared.ErrorModels.ValidationErrorResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "Login",
    "RelativePath": "api/Authentication/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "Shared.Security.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 500
      },
      {
        "Type": "Shared.ErrorModels.ValidationErrorResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "Register",
    "RelativePath": "api/Authentication/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerDto",
        "Type": "Shared.Security.RegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 500
      },
      {
        "Type": "Shared.ErrorModels.ValidationErrorResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.BasketController",
    "Method": "UpdateBasket",
    "RelativePath": "api/Basket",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "basket",
        "Type": "Shared.BasketDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 500
      },
      {
        "Type": "Shared.ErrorModels.ValidationErrorResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.BasketController",
    "Method": "GetBasketById",
    "RelativePath": "api/Basket/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 500
      },
      {
        "Type": "Shared.ErrorModels.ValidationErrorResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.BasketController",
    "Method": "DeleteBasket",
    "RelativePath": "api/Basket/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 500
      },
      {
        "Type": "Shared.ErrorModels.ValidationErrorResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.PaymentsController",
    "Method": "CreateOrUpdatePaymentIntend",
    "RelativePath": "api/Payments/{basketId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "basketId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 500
      },
      {
        "Type": "Shared.ErrorModels.ValidationErrorResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.ProductsController",
    "Method": "GetAllProducts",
    "RelativePath": "api/Products",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 500
      },
      {
        "Type": "Shared.ErrorModels.ValidationErrorResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.ProductsController",
    "Method": "GetProductById",
    "RelativePath": "api/Products/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 500
      },
      {
        "Type": "Shared.ErrorModels.ValidationErrorResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Shared.ProductResultDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.ProductsController",
    "Method": "GetAllBrands",
    "RelativePath": "api/Products/Brands",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 500
      },
      {
        "Type": "Shared.ErrorModels.ValidationErrorResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.ProductsController",
    "Method": "GetAllTypes",
    "RelativePath": "api/Products/Types",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Shared.ErrorModels.ErrorDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 500
      },
      {
        "Type": "Shared.ErrorModels.ValidationErrorResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "E_Commerce.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "api/WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[E_Commerce.WeatherForecast, E-Commerce, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]